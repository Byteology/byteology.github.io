@using Microsoft.AspNetCore.Components.Routing
@using static Byteology.Website.Components.Navigation.NavigationData

<nav class="hidden md:block flex-none box-content
            sticky top-0 z-10 w-full h-12
            bg-dark-900 border border-dark-100 shadow-md
            font-bold whitespace-nowrap select-none">
    <div class="px-4 h-full w-full">
        <div class="max-w-3xl w-full flex h-full mx-auto            
                gap-8 items-center justify-between">

            <a class="h-full flex-1" href="@(_routeManager.Match<Pages.Index>()?.GetUrl())" tabindex="-1">
                <img class="h-full" src="/images/icon.png" alt="Byteology"/>
            </a>
        
            <div class="h-full flex gap-6 lg:gap-8 items-center justify-center">
                @foreach (NavigationSection section in Data.Sections)
                {
                    @if (section.Expand)
                    {
                        @foreach (NavigationItemModel item in section.Items)
                        {
                            @if (item.Page == typeof(Pages.Index))
                                continue;

                            @if (item.Page == typeof(Contacts))
                                continue;

                            <NavLink class="h-full leading-[3rem] transition-fast active:text-accent hocus:text-accent-300" 
                                 tabindex="-1" 
                                 href="@(_routeManager.Match(item.Page)?.GetUrl())" 
                                 Match="NavLinkMatch.All">
                                @item.Text
                            </NavLink>
                        }
                    }
                    else
                    {
                        <div class="h-full cursor-pointer group flex">

                            <NavLink class="pointer-events-none self-center
                                            transition-fast active:text-accent group-hover:text-accent-300" 
                                        tabindex="-1" 
                                        href="@(_routeManager.Match(section.Page)?.GetUrl())" 
                                        Match="NavLinkMatch.Prefix">

                                <span>@(section.Text)</span>
                                <svg class="inline w-[1.8rem] mb-[0.1rem] ml-[-0.4rem]" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                                    <path class="fill-current" 
                                            fill-rule="evenodd" 
                                            d="M15.3 10.3a1 1 0 0 1 1.4 1.4l-4 4a1 1 0 0 1-1.4 0l-4-4a1 1 0 0 1 1.4-1.4l3.3 3.29 3.3-3.3z"/>
                                </svg>

                            </NavLink>

                            <div class="absolute top-12 -ml-4 
                                        bg-dark-700 border border-dark-100 shadow-md 
                                        invisible opacity-0 transition-fast group-hover:visible group-hover:opacity-100 
                                        p-4 space-y-2">

                                @foreach(NavigationItemModel item in section.Items)
                                {
                                    <NavLink class="block transition-fast active:text-accent hocus:text-accent-300" 
                                                tabindex="-1" 
                                                href="@(_routeManager.Match(item.Page)?.GetUrl())" 
                                                Match="NavLinkMatch.All">
                                        @item.Text
                                    </NavLink>
                                }

                            </div>
                        </div>
                    }
                }

                <NavLink class="button p-1 px-4 text-sm" 
                         tabindex="-1"
                         href="@(_routeManager.Match(Data.Highlighted.Page)?.GetUrl())" 
                         Match="NavLinkMatch.All">
                    @Data.Highlighted.Text
                </NavLink>

            </div>

        </div>
    </div>

</nav>

@code {
    private readonly NavigationData Data = new();
}