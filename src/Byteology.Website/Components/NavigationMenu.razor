@using Microsoft.AspNetCore.Components.Routing

<nav class="sticky top-0 z-10 w-full h-[2.5rem] px-4 
            bg-dark-900 border border-dark-100 shadow-md
            text-sm font-bold whitespace-nowrap select-none">

    <div class="hidden md:flex
                max-w-3xl w-full h-[2.5rem] mx-auto            
                gap-8 items-center justify-between">

        <a class="h-full flex-1" href="/" tabindex="-1">
            <img class="h-full" src="/images/icon.png" alt="Byteology"/>
        </a>
        
        <div class="h-full flex gap-8 items-center justify-center">
            @foreach (NavigationItemModel item in _items)
            {
                @if (item.Sublinks == null || item.Sublinks.Length == 0)
                {
                    <NavLink class="@(item.Highlighted ? 
                                        "button p-1 px-2 text-xs" : 
                                        "transition-fast [&.active]:text-accent hover:text-primary-300")" 
                             tabindex="-1" 
                             href="@item.Link.Url" 
                             Match="NavLinkMatch.All">
                        @item.Link.Text
                    </NavLink>
                }
                else
                {
                    <div class="h-full cursor-pointer group">

                        <NavLink class="pointer-events-none leading-[2.5rem] 
                                        transition-fast active:text-accent group-hover:text-primary-300" 
                                 tabindex="-1" 
                                 href="@item.Link.Url" 
                                 Match="NavLinkMatch.Prefix">

                            <span>@item.Link.Text</span>
                            <svg class="inline h-[70%] mb-[0.1rem] ml-[-0.4rem]" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                                <path class="fill-current" 
                                      fill-rule="evenodd" 
                                      d="M15.3 10.3a1 1 0 0 1 1.4 1.4l-4 4a1 1 0 0 1-1.4 0l-4-4a1 1 0 0 1 1.4-1.4l3.3 3.29 3.3-3.3z"/>
                            </svg>

                        </NavLink>

                        <div class="absolute mt-px -ml-4 
                                    bg-dark-700 border border-dark-100 shadow-md 
                                    invisible opacity-0 transition-fast group-hover:visible group-hover:opacity-100 
                                    p-4 space-y-2">

                            @foreach(LinkModel subitem in item.Sublinks)
                            {
                                <NavLink class="block transition-fast active:text-accent hocus:!text-primary-300" 
                                         tabindex="-1" 
                                         href="@subitem.Url" 
                                         Match="NavLinkMatch.All">
                                    @subitem.Text
                                </NavLink>
                            }

                        </div>
                    </div>
                }
            }
        </div>

    </div>

    <div class="flex md:hidden
                w-full h-[2.5rem]
                items-center justify-between gap-8">

        <input id="hamburger" type="checkbox" class="hidden" />
        <label class="w-[1.8rem]" for="hamburger">
            <svg class="transition-normal visible opacity-100
                        checkbox-checked:invisible
                        checkbox-checked:opacity-0"
                 xmlns="http://www.w3.org/2000/svg" 
                 viewBox="0 0 24 24">
                <path class="fill-neutral-100" 
                        fill-rule="evenodd" 
                        d="M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z"/>
            </svg>
            <svg class="absolute top-0 left-0
                        transition-normal invisible opacity-0
                        checkbox-checked:visible
                        checkbox-checked:opacity-100" 
                 xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                <path class="fill-neutral-100" 
                      fill-rule="evenodd" 
                      d="M15.78 14.36a1 1 0 0 1-1.42 1.42l-2.82-2.83-2.83 2.83a1 1 0 1 1-1.42-1.42l2.83-2.82L7.3 8.7a1 1 0 0 1 1.42-1.42l2.83 2.83 2.82-2.83a1 1 0 0 1 1.42 1.42l-2.83 2.83 2.83 2.82z"/>
            </svg>
        </label>

        <div class="fixed w-full h-full top-[2.5rem] left-0 z-50 p-8 overflow-x-hidden overflow-y-auto
                    transition-fast bg-dark-700
                    invisible opacity-0
                    checkbox-checked:visible checkbox-checked:opacity-90">

            <div class="flex flex-col gap-4 text-base text-center">

                <NavLink class="transition-fast [&.active]:text-accent hover:text-primary-300" 
                                     tabindex="-1" 
                                     href="/" 
                                     Match="NavLinkMatch.All">
                        Home
                </NavLink>

                @foreach(NavigationItemModel item in _items.Where(x => !x.Highlighted))
                {
                    @if (item.Sublinks == null || item.Sublinks.Length == 0)
                    {
                        <NavLink class="transition-fast [&.active]:text-accent hover:text-primary-300" 
                                     tabindex="-1" 
                                     href="@item.Link.Url" 
                                     Match="NavLinkMatch.All">
                            @item.Link.Text
                        </NavLink>
                    }
                    else
                    {
                        Guid id = Guid.NewGuid();
                        <input id="@id" type="checkbox" class="hidden" />
                        <label for="@id">
                            <NavLink class="pointer-events-none
                                            transition-fast active:text-accent checkbox-checked:text-primary-300" 
                                     tabindex="-1" 
                                     href="@item.Link.Url" 
                                     Match="NavLinkMatch.Prefix">

                                <span>@item.Link.Text</span>
                                <svg class="inline absolute h-[1.8rem] bottom-[-0.4rem]" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                                    <path class="fill-current" 
                                          fill-rule="evenodd" 
                                          d="M15.3 10.3a1 1 0 0 1 1.4 1.4l-4 4a1 1 0 0 1-1.4 0l-4-4a1 1 0 0 1 1.4-1.4l3.3 3.29 3.3-3.3z"/>
                                </svg>

                            </NavLink>
                        </label>
                    }
                }
            </div>

        </div>

        <div class="flex gap-8">
            @foreach(NavigationItemModel item in _items.Where(x => x.Highlighted))
            {
                <NavLink class="button p-1 px-2 text-xs" 
                                 tabindex="-1" 
                                 href="@item.Link.Url" 
                                 Match="NavLinkMatch.All">
                    @item.Link.Text
                </NavLink>
            }
        </div>

    </div>
</nav>

@code {
    [Inject]
    private ModelReader _modelReader { get; set; } = default!;
    private NavigationItemModel[] _items = default!;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _items = _modelReader.ReadJson<NavigationItemModel[]>("nav-menu-data.json");
    }
}