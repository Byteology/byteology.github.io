<section class="border border-dark-100 shadow-md">
    <div class="border-[2rem] border-dark-900/70">
        <div class="bg-dark-900/70 space-y-4 pb-4">
            <h1 class="text-lg font-bold text-accent uppercase">@Header</h1>
            @if (!string.IsNullOrEmpty(Text))
            {
                @(new MarkupString(Markdown.ToHtml(Text)))
            }
        </div>

        <div class="grid grid-cols-1 @(Wide ? "" : "md:grid-cols-2")">
            <div class="border-x-0 border-y-[0.5rem]
                        border-dark-900/70">
                <div class="p-4 h-full
                            bg-dark-700/70 border border-dark-100 shadow-md 
                            flex flex-col gap-2">
                    <div class="flex items-center gap-4">
                        <h2 class="grow text-accent font-bold uppercase text-sm md:text-base">Pros</h2>
                    </div>
                    <div class="[&_ul]:list-disc [&_ul]:space-y-4 [&_ul_li::marker]:text-accent pl-4 text-sm">
                        @(new MarkupString(Markdown.ToHtml(Pros)))
                    </div>
                </div>
            </div>

            <div class="border-x-0 border-y-[0.5rem]
                        @(Wide ? "" : "md:border-l-[0.5rem]")
                        border-dark-900/70">
                <div class="p-4 h-full
                            bg-dark-700/70 border border-dark-100 shadow-md 
                            flex flex-col gap-2">
                    <div class="flex items-center gap-4">
                        <h2 class="grow text-error font-bold uppercase text-sm md:text-base">Cons</h2>
                    </div>
                    <div class="[&_ul]:list-disc [&_ul]:space-y-4 [&_ul_li::marker]:text-error pl-4 text-sm">
                        @(new MarkupString(Markdown.ToHtml(Cons)))
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    [Parameter, EditorRequired]
    public string Header { get; set; } = null!;

    [Parameter]
    public string? Text { get; set; }

    [Parameter, EditorRequired]
    public string Pros { get; set; } = null!;

    [Parameter, EditorRequired]
    public string Cons { get; set; } = null!;

    [Parameter]
    public bool Wide { get; set; }
}