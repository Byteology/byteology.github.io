@using Byteology.Website.Components.Inquiry


<section class="bg-dark-900/70 border border-dark-100 shadow-md p-8 space-y-4">
    <div class="flex items-center gap-4">
        <ProxyComponent class="flex-none self-center w-10" ComponentToRender="_introModel.Icon" />
        <h1 class="text-accent text-xl font-bold uppercase">@_introModel.Title</h1>
    </div>
    <p class="">@_introModel.Body</p>
</section>

<section class="border border-dark-100 shadow-md">
    <div class="border-[2rem] border-dark-900/70">
        <div class="bg-dark-900/70 space-y-4 pb-4">
            <h1 class="text-lg font-bold text-accent uppercase">@_benefitsModel.Title</h1>
            <p>@_benefitsModel.Body</p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2">
            @for (int i = 0; i < _benefitsModel.Items.Length; i++)
            {
                Benefit benefit = _benefitsModel.Items[i];
                <div class="border-x-0 border-y-[0.5rem]
                            @(i % 2 == 1 ? "md:border-l-[0.5rem]" : "md:border-r-[0.5rem]") 
                            border-dark-900/70">
                    <div class="p-4 h-full
                                bg-dark-700/70 border border-dark-100 shadow-md 
                                flex flex-col gap-2">
                        <div class="flex items-center gap-4">
                            <ProxyComponent class="flex-none self-center w-10" ComponentToRender="@benefit.Icon"/>
                            <h2 class="grow text-accent font-bold uppercase text-sm md:text-base">@benefit.Title</h2>
                        </div>
                        <p class="text-sm">@benefit.Description</p>
                    </div>
                </div>
            }
        </div>
    </div>
</section>


<section class="bg-dark-900/70 border border-dark-100 shadow-md p-8 space-y-4">
    <h1 class="text-lg font-bold text-accent uppercase">@_whenToMigrateModel.Title</h1>
    <p>@_whenToMigrateModel.Body</p>
</section>

<section class="border border-dark-100 shadow-md">
    <div class="bg-dark-900/70 space-y-4 p-8">
        <h1 class="text-lg font-bold text-accent uppercase">@_migrationModel.Title</h1>
        <p>@_migrationModel.Body</p>
    </div>

    @for (int i = 0; i < _migrationModel.Steps.Length; i++)
    {
        MigrationStep step = _migrationModel.Steps[i];
        <div class="md:border-x-[2rem] border-dark-900/70">
            <div class="col-span-12 flex flex-col border-y md:border border-dark-100 shadow-md">
                <div class="px-8 py-2 bg-dark/70 border-b border-dark-100 shadow-md flex gap-4 items-center">
                    <h2 class="text-primary uppercase font-bold text-2xl">@((i + 1).ToString().PadLeft(2, '0'))</h2>
                    <h2 class="text-accent uppercase font-bold text-sm md:text-base">@step.Title</h2>
                </div>
                <Timeline class="bg-dark-700/70 px-8 py-6 text-accent" Items="step.Items" Context="item" >
                    <Item>
                        <p class="text-neutral-100"> @(new MarkupString(Markdown.ToHtml(item)))</p>
                    </Item>
                </Timeline>
            </div>
        </div>
        <div class="w-full h-8 bg-dark-900/70"></div>
    }
</section>


<section class="col-span-12 2xl:col-start-4 2xl:col-span-6 flex justify-center">
    <Inquiry CallToAction="@_callToAction"/>
</section>

